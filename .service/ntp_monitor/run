#!/bin/bash

INTERVAL=300        # how often to run (secs)
SPREAD=90           # minimum difference to cause hwclock resync (secs)

exec >> /usr/local/careview/logs/ntp_monitor.log 2>&1
echo "`date`: ntp monitor starting up."

while true; do
    # make sure the daemon's up
    if [ -z "`pidof ntpd`" ]; then
        echo -n "`date`: ntpd died! "
        /etc/init.d/ntp start
    fi

    # check hardware clock
    now=`date +%s`
    hwtime=$(date -d "`hwclock --show`" +%s)
    timediff=`expr $now - $hwtime`
   
    # kind of a pain to do absval in bash... 
    timediff=$(($timediff >= 0 ? $timediff : $timediff * -1))

    # if the hardware clock is far enough off, resync it
    if [ $timediff -gt $SPREAD ]; then
        hwclock --set --date="`date`"
        if [ $? -eq 0 ]; then
            echo "`date`: Re-synced hardware clock."
        else
            echo "`date`: failed to set hardware clock!"
        fi
    fi

    sleep $INTERVAL
done

echo "`date`: ntp monitor exiting!"
exit 0
